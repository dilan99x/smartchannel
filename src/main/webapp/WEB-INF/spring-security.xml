<?xml version="1.0" encoding="UTF-8"?>
	
<beans:beans xmlns="http://www.springframework.org/schema/security"
xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security-3.0.3.xsd">

	<global-method-security pre-post-annotations="enabled">
		<!-- AspectJ pointcut expression that locates our "post" method and applies 
			security that way <protect-pointcut expression="execution(* bigbank.*Service.post*(..))" 
			access="ROLE_TELLER"/> -->
	</global-method-security>
	
	<http auto-config="true" use-expressions="true">
	    <intercept-url pattern="/login" access="permitAll" />
		<intercept-url pattern="/logout" access="permitAll" />
		<intercept-url pattern="/denied" access="permitAll" />
		<intercept-url pattern="/ChennelCenterRegistration" access="hasRole('ROLE_USER') or hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/fetchChannelCenter" access="hasRole('ROLE_USER') or hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/addChannelCenter" access="hasRole('ROLE_USER') or hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/welcome" access="hasRole('ROLE_USER') or hasRole('ROLE_ADMIN') or hasRole('ROLE_TEST_USER')" />
		<intercept-url pattern="/" access="hasRole('ROLE_USER')" />

		<!-- here uthentication-failure-url should be equal to ="/login"-->
		<form-login login-page="/login" authentication-failure-url="/welcome" default-target-url="/welcome"
		always-use-default-target="true"/>
		
		<access-denied-handler ref="accessDeniedHandler"/>

    <logout invalidate-session="true" logout-success-url="/logout"/>
        
	</http>

	<authentication-manager>
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource"

				users-by-username-query="select username,password, enabled from users where username=?"

				authorities-by-username-query="select u.username, ur.authority from users u, user_roles ur where u.user_id = ur.user_id and u.username =?" />
		</authentication-provider>
	</authentication-manager>

</beans:beans>